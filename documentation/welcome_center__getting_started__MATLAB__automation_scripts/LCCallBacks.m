
function a = LCCallBacks(str)
%Example event handlers for some of the events generated by a LabChart document.
a = str2func(str);

function OnSelectionChange(varargin)
%Example event handler. Called when the selection changes in the LabChart
%document.
%This example gets the selected data as a (2D) matrix with each column
%corresponding to a channel and each row corresponding to a time point.
global gLCDoc;
disp('OnSelectionChange called')
kArrayOfDoubles = 1;  % GetSelectedData returns a matrix of doubles, not variants (cells)
kAllSelectedChannels = -1; % GetSelectedData returns all selected channels, rather just the specified channel.
data = gLCDoc.GetSelectedData(kArrayOfDoubles, kAllSelectedChannels);
subplot(1,1,1); %no subplots
plot(data)

function OnBlockStart(varargin)
%Example event handler called when sampling and a new block is about to be
%added to the document. This is called *before* the new block has been
%added, so gLCDoc.NumberOfRecords does not yet include the new block.
%Initialise the global variables used by OnNewSamples().
global gLCDoc;
global gLatestBlock;
global gBlockSecsPerTick;
global gLatestTickInBlock;
global gChans;
global gChansData;
global gT;
disp('OnBlockStart called')
gLatestBlock = gLCDoc.NumberOfRecords
gBlockSecsPerTick = gLCDoc.GetRecordSecsPerTick(gLatestBlock)
gNChanSamples = 0;
gT = [];   %time (from start of block)
gLatestTickInBlock = 0;

%gChansData is a cell array because LabChart channels are not necessarily all the same
%length while sampling, since the data can arrive in each channel with
%different delays.
gChansData = cell(size(gChans)); 




function OnNewSamples(varargin)
%Example event handler called when sampling, whenever new samples might be 
%available, typically 20 times a second.
%This example gets any new samples from channel gChan, appends them to
%the gChan1Data vector, then plots the latest 5000 samples.
global gLCDoc;
global gLatestBlock;
global gBlockSecsPerTick;
global gLatestTickInBlock;
global gChans;
global gChansData;
global gT;
%disp('OnNewSamples called')
gLatestTickInBlock = gLatestTickInBlock+double(varargin{3});
% HRESULT GetChannelData([in]ChannelDataFlags flags, [in]long channelNumber, [in]long blockNumber, [in]long startSample, [in]long numSamples, [out,retval]VARIANT *data) const;
% For the sampling case we can pass -1 for the number of samples parameter,
% meaning return all available samples
newSamplesMax = 0; %max new samples added across channels
minChanLength = 1e30; %number of samples in the shortest channel
for ch = gChans
% HRESULT GetChannelData([in]ChannelDataFlags flags, [in]long channelNumber, [in]long blockNumber, [in]long startSample, [in]long numSamples, [out,retval]VARIANT *data) const;
% For the sampling case we can pass -1 for the number of samples parameter,
% meaning return all available samples
    chanSamples = gLCDoc.GetChannelData (1, ch, gLatestBlock+1, length(gChansData{ch})+1, -1);
    gChansData{ch} = [gChansData{ch}; chanSamples'];
    if minChanLength > length(gChansData{ch})
        minChanLength = length(gChansData{ch});
    end
    if newSamplesMax < length(chanSamples)
        newSamplesMax = length(chanSamples);
    end
end

if newSamplesMax > 0
    nSamples = length(gT);
    gT = [gT; [nSamples:nSamples+newSamplesMax-1]'*gBlockSecsPerTick];
end

%plot the latest 5000 samples
plotRange = max(1,minChanLength-5000):minChanLength;
for ch = gChans
    subplot(length(gChans),1,ch), plot(gT(plotRange),gChansData{ch}(plotRange));
end



function OnBlockFinish(varargin)
global gLCDoc;
global gLatestBlock;
global gBlockSecsPerTick;
global gLatestTickInBlock;
global gChans;
global gChansData;
global gT;
disp('OnBlockFinish called')
%This would be a good place to save the gChansData and gT for the completed
%block, if needed.



